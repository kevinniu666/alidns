#RBAC
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: alidns:secret-reader
rules:
  - apiGroups:
      - ''
    resources:
      - 'secrets'
    resourceNames:
      - 'alibaba-api-dns-secret'
    verbs:
      - 'get'
      - 'watch'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: alidns:secret-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alidns:secret-reader
subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: alidns
    namespace: cert-manager
---
# ClusterIssuer
apiVersion: certmanager.k8s.io/v1alpha1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: tttlkkkl@aliyun.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - selector: 
        dnsNames:
        - '*.lihuasheng.cn'
      dns01:
        webhook:
          config:
            accessKeyRef:
              accessKeySecretKey: accessKeySecret
              accessKeyIdKey: accessKeyId
              name: alibaba-api-dns-secret
            regionId: "cn-shenzhen"
            ttl: 600
          groupName: acme.lihuaio.com
          solverName: alidns

---
#Certificate
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: lihuasheng.cn-certificate
spec:
  secretName: lihuasheng.cn-tls
  renewBefore: 240h
  dnsNames:
  - '*.lihuasheng.cn'
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
---
#igress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: lihuasheng-ingress
  namespace: cert-manager
  annotations:
    certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - '*.lihuasheng.cn'
    secretName: lihuasheng.cn-tls
  rules:
  - host: li.lihuasheng.cn
    http:
      paths:
      - path: /
        backend:
          serviceName: backend-service
          servicePort: 80